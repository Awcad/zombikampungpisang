#include <iostream>
#include <string>
#include <vector>
#include <cstdlib> // for system()
#include <ctime>   // for time() in srand( time(NULL) );
#include <iomanip> // for setw()
using namespace std;

class Mars
{
private:
    vector<vector<char>> map_; // convention to put trailing underscore
    int numX_, numY_;          // to indicate private data
public:
    Mars(int numX = 15, int numY = 5); // ada something kene ubah kat sini
    void init(int numX, int numY);
    void display() const;
};

void custom()
{
    int numX;
    cout << "Number of rows : ";
    cin >> numX;

    int numY;
    cout << "Number of columns : ";
    cin >> numY;
}

Mars::Mars(int numX, int numY)
{
    init(numX, numY);
}

void Mars::init(int numX, int numY)
{
    custom();
    numX_ = numX;
    numY_ = numY;
    char objects[] = {' ', ' ', ' ', ' ', ' ', 'r', '^', '>', '<', 'v', 'p', 'h', '1', '2'};
    int noOfObjects = 14; // number of objects in the objects array
    // create dynamic 2D array using vector
    map_.resize(numY_); // create empty rows
    for (int i = 0; i < numY_; ++i)
    {
        map_[i].resize(numX_); // resize each row
    }
    // put random characters into the vector array
    for (int i = 0; i < numY_; ++i)
    {
        for (int j = 0; j < numX_; ++j)
        {
            int objNo = rand() % noOfObjects;
            map_[i][j] = objects[objNo];
        }
    }
}

void Mars::display() const
{
    // comment this out during testing
    // system("cls"); // OR system("clear"); for Linux / MacOS
    cout << " ----------------_" << endl;
    cout << " = Alien vs Zombie ヽ( `д´*)ノ =" << endl;
    cout << " --------------__-" << endl;
    // for each row
    for (int i = 0; i < numY_; ++i)
    {
        // display upper border of the row
        cout << " ";
        cout << " ";
        for (int j = 0; j < numX_; ++j)
        {
            cout << "+-";
        }
        cout << "+" << endl;
        // display row number
        cout << setw(2) << (numY_ - i);
        // display cell content and border of each column
        for (int j = 0; j < numX_; ++j)
        {
            cout << "|" << map_[i][j];
        }
        cout << "|" << endl;
    }
    // display lower border of the last row
    cout << " ";
    cout << " ";
    for (int j = 0; j < numX_; ++j)
    {
        cout << "+-";
    }
    cout << "+" << endl;
    // display column number
    cout << " ";
    cout << " ";
    for (int j = 0; j < numX_; ++j)
    {
        int digit = (j + 1) / 10;
        cout << " ";
        if (digit == 0)
            cout << " ";
        else
            cout << digit;
    }
    cout << endl;
    cout << " ";
    cout << " ";
    for (int j = 0; j < numX_; ++j)
    {
        cout << " " << (j + 1) % 10;
    }
    cout << endl
         << endl;
}

void display()
{
    Mars mars;
    mars.display();
}

int main()
{
    srand(time(NULL));
    display();
}
